#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

compile '/css/*/' do
  filter :sass, :syntax => :scss
end

compile '/' do
  filter :haml
  layout 'root'
end

compile '/beer_report/' do
  filter :haml
  layout 'beer'
end

compile '/about/' do
  filter :haml
  layout 'about'
end

compile '/portfolio/' do
  filter :haml
  layout 'about'
end

compile '/portfolio/*' do end

compile '/blog/*' do
  if item.identifier == '/blog/'
    filter :haml
    layout 'about'
  else
    filter :haml
    layout 'blog_post'
  end
end

compile '/js/*' do end

compile '*' do
  if item.binary?
    # don’t filter binary items
  elsif category? @item 
    filter :haml
    layout 'category'
  else
    filter :haml
    layout 'item'
  end
end

route '/css/*/' do
  item.identifier.chop + '.css'
end

route '/js/*' do
  item.identifier.chop + '.js'
end

route '/portfolio/*' do
  if item.identifier == '/portfolio/'
    item.identifier + 'index.html'
  else
    nil
  end
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :haml
