#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

preprocess do
  Categories.initialize items

  # Add the homepage notice to about page
  about = items.find {|i| i.identifier == '/about/' }
  home = items.find {|i| i.identifier == '/' }
  about[:notice] = home[:notice]
end

compile '/google89d4b2531f314684/' do 
  #This is the google site id page
end

# Ignore CSS Import Architecture
compile '/css/modules/*' do end
compile '/css/base/*' do end
compile '/css/generic/*' do end
compile '/css/helpers/*' do end

compile '/css/*/' do
  filter :sass, :syntax => :scss
end

compile '/js/*' do end

compile '*' do
  # don’t filter binary items
  unless item.binary?
    filter :haml
    if category? @item
      # Category Level Item
      page = item.identifier
      case page
      when '/hobbies/', '/bookshelf/'
        # A page that lists items in the category
        layout 'category'
      when '/beer_report/'
        layout 'beer'
      else
        # A page that yields to the category content
        layout 'page'
      end

    else
      # Non Category Level Item
      case get_category_of( item ).identifier
      when '/portfolio/'
        #Do not render individual portfolio items
      when '/blog/', '/'
        # false -> homepage
        layout 'blog'
      else
        layout 'item'
      end 
    end
  end
  #end of item.binary?
end

route '/css/modules/*' do nil end
route '/css/base/*' do nil end
route '/css/generic/*' do nil end
route '/css/helpers/*' do nil end

route '/css/*/' do
  item.identifier.chop + '.css'
end

route '/js/*' do
  item.identifier.chop + '.js'
end

route '/portfolio/*' do
  if item.identifier == '/portfolio/'
    item.identifier + 'index.html'
  else
    nil
  end
end

route '/google89d4b2531f314684/' do
  item.identifier.chop + '.html'
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :haml
